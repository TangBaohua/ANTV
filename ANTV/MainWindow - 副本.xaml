<Window x:Class="ANTV.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        
        xmlns:wc="http://schemas.microsoft.com/winfx/2006/xaml/presentation/windows"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        
        xmlns:local="clr-namespace:ANTV.Converter"
        Icon="pack://application:,,,/image/ANTV.ico"
        Title="Ans IPTV Tester" Height="700" Width="1340" 
        
        WindowStyle="None" ResizeMode="CanResize" 
        AllowsTransparency="True" BorderThickness="1"  BorderBrush="#272727"
        Background="Transparent"

        AllowDrop="True"
        DragEnter="Window_DragEnter"
        Drop="Window_Drop"
        
        MaxWidth="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}" 
        MaxHeight="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}" >


    <WindowChrome.WindowChrome>
        <WindowChrome 
            CaptionHeight="30"
            ResizeBorderThickness="10,10,4,10"
            GlassFrameThickness="100"
            CornerRadius="30"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <local:LatencyToColorConverter x:Key="LatencyToColorConverter" />
        <local:LatencyToWidthConverter x:Key="LatencyToWidthConverter" />

        <!---->
        <Style x:Key="CloseButtonStylex" TargetType="Button">
            <!-- 设置默认属性 -->
  
            <Setter Property="Background" Value="Yellow"/>
            <Setter Property="BorderBrush" Value="Red"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- 设置触发器 -->
            <Style.Triggers>
                <!-- 鼠标悬停时背景颜色变化 -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#34c434"/>
                </Trigger>

                <!-- 鼠标按下时背景颜色变化 -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#555555"/>
                </Trigger>
            </Style.Triggers>
        </Style>





        <Style x:Key="CustomButtonStyle" TargetType="RadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <StackPanel Background="{TemplateBinding Background}" HorizontalAlignment="Center">
                            <!-- 图标部分 -->
                            <!--<Viewbox Width="50" Height="10">
                                <Canvas>
                                    --><!-- SVG Path 数据 --><!--
                                    <Path Data="M0,0 L25,0 L12.5,25 Z" Fill="Blue" />
                                </Canvas>
                            </Viewbox>-->
                            <!-- 文字部分 -->
                            <TextBlock Width="50" TextAlignment="Center"
                                       FontFamily="pack://application:,,,/ANTV;component/Fonts/FontAwesome5Free-Solid-900.otf#Font Awesome 5 Free Solid"                                
                                       VerticalAlignment="Center"
                                       Text="{TemplateBinding Content}" 
                                       Margin="0,14,0,0" 
                                       HorizontalAlignment="Center"
                                       FontSize="20" 
                                      
                                       Foreground="White" 
                                       Panel.ZIndex="2" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- 默认背景 -->
            <Setter Property="Background" Value="#2B2B2B" />

            <!-- 触发器样式 -->
            <Style.Triggers>
                <!-- 鼠标悬停 -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#fff" />
                    <Setter Property="Background" Value="#404040" />
                </Trigger>

                <!-- 按钮被按下 -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#555555" />
                </Trigger>

                <!-- 按钮选中状态 -->
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#2A446C" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        
        
        <Style x:Key="CustomButtonStyleWithoutGroup" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <StackPanel Background="{TemplateBinding Background}" HorizontalAlignment="Center">
                            <!-- 图标部分 -->
                            <Viewbox Width="50" Height="0">
                               
                                    <TextBlock Width="50" TextAlignment="Center"
                                         FontFamily="pack://application:,,,/ANTV;component/Fonts/FontAwesome5Free-Solid-900.otf#Font Awesome 5 Free Solid"
                                         VerticalAlignment="Center"
                                         Text="{TemplateBinding Content}" Margin="0,13,0,0" 
                                         HorizontalAlignment="Center" 
                                         FontSize="20" Foreground="Purple" />
 
                            </Viewbox>
                            <TextBlock Width="50" TextAlignment="Center"
                                FontFamily="pack://application:,,,/ANTV;component/Fonts/FontAwesome5Free-Solid-900.otf#Font Awesome 5 Free Solid"
                                VerticalAlignment="Center"
                                Text="{TemplateBinding Content}" Margin="0,13,0,0" 
                                HorizontalAlignment="Center" 
                                FontSize="20" Foreground="White" />
                             
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#2B2B2B" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#404040" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#555555" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomMenuButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                Padding="5"
                                BorderBrush="Yellow"
                                BorderThickness="0">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">

                                <!-- 图标 -->
                                <TextBlock FontFamily="pack://application:,,,/ANTV;component/Fonts/FontAwesome5Free-Solid-900.otf#Font Awesome 5 Free Solid"
                                   Text="{TemplateBinding Tag}" 
                                   FontSize="16" 
                                   Margin="0,0,10,0" />
                                <!-- 文本 -->
                                <TextBlock Text="{TemplateBinding Content}" 
                                   FontSize="11" 
                                   VerticalAlignment="Center" />
                            </StackPanel>
                        </Border> 
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#1F1F1F" />
            <Setter Property="Foreground" Value="White" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#343434" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#555555" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- 定义转换器 -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        <!-- 按钮样式 -->
        <Style x:Key="DropdownButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#2b2b2b" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#808080" />
            <Setter Property="Padding" Value="5" />
        </Style>

        <!-- 下拉菜单按钮按钮样式 -->
        <Style x:Key="RoundedButtonStyle" TargetType="Button" >
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="Button" >

                        <Border 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="Transparent" 
                            BorderThickness="0" 
                            CornerRadius="4" Margin="1" Padding="5">

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <!-- 图标 -->
                                <TextBlock FontFamily="pack://application:,,,/ANTV;component/Fonts/FontAwesome5Free-Solid-900.otf#Font Awesome 5 Free Solid"
                                   Text="{TemplateBinding Tag}" 
                                   Margin="10,0,10,0" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   VerticalAlignment="Center" 
                                   FontSize="14" />
                                <!-- 文本 -->
                                <ContentPresenter VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#2C2C2C" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#34c434" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#555555" />
                </Trigger>
            </Style.Triggers>
        </Style>




        <!--Caption 按钮 最大化最小化关闭按钮 Base style for title bar buttons-->
            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="Transparent" Width="47" Height="32">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                           Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                           RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="Transparent"/>
                                <Setter TargetName="txt" Property="Foreground" Value="#296ACC"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CaptionCloseButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="Transparent" Width="47" Height="32">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                           Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                           RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="#ff0000"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="#fff"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Minimize-->
            <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE949;"/>
            </Style>

            <!--Maximize-->
            <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE739;"/>
            </Style>

            <!--Restore-->
            <Style x:Key="RestoreButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE923;"/>
            </Style>

            <!--Close-->
            <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionCloseButtonStyle}">
                <Setter Property="Content" Value="&#xE106;"/>
            </Style>

       


    </Window.Resources>
    <!--Title bar button commands-->
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Close" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Maximize" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Minimize" />
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Restore" />
    </Window.CommandBindings>

    <!--<Border  x:Name="MainWindowBorder">-->
    <Grid   ShowGridLines="False" Background="Gray">
        <Grid.RowDefinitions>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Background="#1F1F1F" Height="32" VerticalAlignment="Top" Margin="0" >
            <Grid>
                <TextBlock Text="| ANTV IPTV Tester" Foreground="White" VerticalAlignment="Center" Margin="0,0,0,0"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,0">
                     <!--最小化最大化关闭按钮-->
                    <!--<Button Style="{StaticResource CloseButtonStyle}" Content="_" Background="Transparent" Foreground="AliceBlue" BorderThickness="0" Width="47" Height="30" Margin="0,0,1,0" Click="Minimize_Click"/>
                    <Button Style="{StaticResource CloseButtonStyle}" Content="□" Background="Transparent" Foreground="AliceBlue" BorderThickness="0" Width="47" Height="30" Margin="0,0,1,0" Click="Maximize_Click"/>
                    <Button Style="{StaticResource CloseButtonStyle}" Content="x" Background="Red"         Foreground="AliceBlue" BorderThickness="0" FontSize="10" Width="47" Height="30" Margin="0,0,-9,0" Click="Close_Click"/>-->
                         
                    <Button Style="{StaticResource MinimizeButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" Command="{x:Static SystemCommands.MinimizeWindowCommand}"/>
                    <Button Style="{StaticResource RestoreButtonStyle}"  WindowChrome.IsHitTestVisibleInChrome="True" Command="{x:Static SystemCommands.RestoreWindowCommand}"  x:Name="RestoreButton"  Visibility="Collapsed" />
                    <Button Style="{StaticResource MaximizeButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" Command="{x:Static SystemCommands.MaximizeWindowCommand}" x:Name="MaximizeButton" Visibility="Visible" />
                    <Button Style="{StaticResource CloseButtonStyle}"    WindowChrome.IsHitTestVisibleInChrome="True" Command="{x:Static SystemCommands.CloseWindowCommand}"  />
                    
                </StackPanel>
            </Grid>
        </Border>
        
        <Grid Grid.Row="1" Background="Red">
            <Border Background="#1F1F1F" Height="60" VerticalAlignment="Top"   Margin="0 0 0 0">
                <!--<ComboBox Width="200" Height="30" Margin="10"  >
                    <ComboBoxItem Content="选项 1" />
                    <ComboBoxItem Content="选项 2" />
                    <ComboBoxItem Content="选项 3" />
                </ComboBox>-->
                
                
            </Border>

            <DockPanel LastChildFill="False">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                    <Button  Style="{StaticResource CustomMenuButtonStyle}" Content="打开文件" VerticalAlignment="Bottom" Margin="50 0 0 0" Tag="&#xf07c;" Width="100" Height="35" Click="OpenFileButton_Click"/>
                    <Button  Style="{StaticResource CustomMenuButtonStyle}" Content="导出文件" VerticalAlignment="Bottom" Margin="0 0 0 0"   Tag="&#xf013;" Width="100" Height="35" Click="DropdownButton_Click"/>

                    <Button   Width="68" Height="60"  Margin="154 0 0 0" Content="&#xf013;"  Click="SettingsButton_Click"/>
                    <Button   Width="68" Height="60"  Margin="0 0 0 0" Content="&#xf013;"  Click="SettingsButton_Click"/>
                    <Button   Width="68" Height="60"  Margin="0 0 0 0" Content="&#xf013;"  Click="SettingsButton_Click"/>
                    <StackPanel  Width="68" Height="60" Background="#1F1F1F" >
                        <TextBlock TextAlignment="Center" Foreground="White"  FontSize="14" Margin="0 5 0 0" >Total</TextBlock>
                        <TextBlock TextAlignment="Center" Foreground="White" FontSize="22"  Margin="0 5 0 0">208</TextBlock>
                    </StackPanel>
                    <StackPanel  Width="68" Height="60" Background="#1F1F1F" AllowDrop="True" >
                        <TextBlock TextAlignment="Center" Foreground="White"  FontSize="14" Margin="0 5 0 0" >on Line</TextBlock>
                        <TextBlock TextAlignment="Center" Foreground="#11F800" FontSize="22"  Margin="0 5 0 0" >108</TextBlock>
                    </StackPanel>
                    <StackPanel  Width="68" Height="60" Background="#1F1F1F" AllowDrop="True" >
                        <TextBlock TextAlignment="Center" Foreground="White"  FontSize="14" Margin="0 5 0 0" >off Line</TextBlock>
                        <TextBlock TextAlignment="Center" Foreground="Red" FontSize="22"  Margin="0 5 0 0">100</TextBlock>
                    </StackPanel>
                    <StackPanel  Width="88" Height="60" Background="#1F1F1F" AllowDrop="True" Margin="13 0 0 0">
                        <TextBlock TextAlignment="Center" Foreground="White"  FontSize="14" Margin="0 5 0 0" >Effective rate</TextBlock>
                        <TextBlock TextAlignment="Center" Foreground="White" FontSize="22"  Margin="0 5 0 0">51.92%</TextBlock>
                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                    <Button  Style="{StaticResource CustomButtonStyleWithoutGroup}"  Width="68" Height="60"  Margin="0 0 0 0" Content="&#xf013;"  Click="SettingsButton_Click"/>
                    <Button  Style="{StaticResource CustomButtonStyleWithoutGroup}"  Width="68" Height="60"  Margin="0 0 0 0" Content="&#xf013;"  Click="SettingsButton_Click"/>
                    <Button   Width="68" Height="60"  Margin="0 0 0 0" Content="&#xf013;" BorderThickness="0" Background="#1F1F1F" Click="SettingsButton_Click"/>
                    <Button   Width="68" Height="60"  Margin="0 0 0 0" Content="&#xf013;" BorderThickness="0" Background="#1F1F1F" Click="SettingsButton_Click"/>
                    <Button   Width="68" Height="60"  Margin="0 0 0 0" Content="&#xf013;" BorderThickness="0" Background="#1F1F1F" Click="SettingsButton_Click"/>
                    <Button   Width="68" Height="60"  Margin="0 0 0 0" Content="&#xf013;" BorderThickness="0" Background="#1F1F1F" Click="MyWindowButton_Click"/>

                </StackPanel>

                <!-- Popup 模拟下拉菜单 -->
                <Popup x:Name="DropdownPopup" 
                       PlacementTarget="{Binding ElementName=DropdownButton}" 
                       AllowsTransparency="True"
                       Placement="Bottom" 
                       StaysOpen="False" 
                       IsOpen="False" >
                    <Border Background="#2C2C2C"  
                            BorderBrush="#2C2C2C" 
                            BorderThickness="3" 
                            CornerRadius="5"
                            Width="180">

                        <StackPanel  >
                            <Button BorderBrush="Transparent" Tag="&#xf0e2;"  Content="另存为m3u"          Margin="0" Height="30" BorderThickness="0" Style="{StaticResource RoundedButtonStyle}" />
                            <Button BorderBrush="Transparent" Tag="&#xf12e;"  Content="仅有效链接另存为m3u" Margin="0" Height="30" BorderThickness="0" Style="{StaticResource RoundedButtonStyle}" />
                            <Button BorderBrush="Transparent" Tag="&#xf124;"  Content="另存为Txt"          Margin="0" Height="30" BorderThickness="0" Style="{StaticResource RoundedButtonStyle}" />
                            <Button BorderBrush="Transparent" Tag="&#xf04e;"  Content="仅有效链接另存为Txt" Margin="0" Height="30" BorderThickness="0" Style="{StaticResource RoundedButtonStyle}" />
                        </StackPanel>
                    </Border>
                </Popup>

            </DockPanel>


         

            <!--<Grid HorizontalAlignment="Left">
                <Button Style="{StaticResource CustomButtonStyleWithoutGroup}" Content="&#xf013;"  Width="50" Height="50" Click="SettingsButton_Click"/>
                <Button Margin="160 0 0 0" Style="{StaticResource CustomButtonStyleWithoutGroup}" Content="&#xf013;"  Width="50" Height="50" Click="SettingsButton_Click"/>
                
            </Grid>
            <Grid>
                <Button Style="{StaticResource CustomButtonStyleWithoutGroup}" Content="&#xf013;"  Width="50" Height="50" Click="SettingsButton_Click"/>
            </Grid>-->
        </Grid>
        
        <Grid Background="Black" ShowGridLines="False" Grid.Row="2" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            
            <Border Background='#2B2B2B' Grid.Column="0">
                <DockPanel  HorizontalAlignment="Left"  >
                    <!-- 左下侧按钮 -->
                    <StackPanel DockPanel.Dock="Bottom"  Orientation="Vertical">
                        <Button Style="{StaticResource CustomButtonStyleWithoutGroup}" Content="&#xf013;"  Width="50" Height="50" ToolTip="设置" Click="SettingsButton_Click"/>
                        <Button Style="{StaticResource CustomButtonStyleWithoutGroup}" Content="&#xf06a;"  Width="50" Height="50" ToolTip="关于" Click="InfoButton_Click"/>
                        <Popup x:Name="MyPopup" Placement="Center" StaysOpen="False">
                            <Border BorderBrush="Gray" BorderThickness="1" Background="#2b2b2b" Width="300" Height="200">
                                <TextBlock Text="Version 1.0.0" 
                                           Foreground="White"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" 
                                   FontSize="20"/>
                            </Border>
                        </Popup>

                    </StackPanel>
                    <!-- 左上侧按钮 -->
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <!-- 使用自定义按钮 TargetButton ToggleButton-->

                        <RadioButton x:Name="ListRadioButton" Style="{StaticResource CustomButtonStyle}" ToolTip="列表" Content="&#xf03a;" GroupName="Group1" Width="50" Height="50" IsChecked="True"/>
                        <RadioButton x:Name="SnapshotsRadioButton" Style="{StaticResource CustomButtonStyle}" ToolTip="快照" Content="&#xf009;" GroupName="Group1" Width="50" Height="50" />
                        <RadioButton x:Name="IconRadioButton" Style="{StaticResource CustomButtonStyle}" ToolTip="台标" Content="&#xf00a;" GroupName="Group1" Width="50" Height="50" />
                    </StackPanel>
                </DockPanel>
            </Border>
            
            <Grid Grid.Column="1" Visibility="{Binding IsChecked, ElementName=ListRadioButton, Converter={StaticResource BoolToVisibilityConverter}}">
                <ListView  ItemsSource="{Binding WifiList}" Margin="0 5 0 0" Background="Black" BorderThickness="0">
                    <ListView.Resources>
                        <!--配置 VirtualizingStackPanel-->
                        <Style TargetType="{x:Type ListView}">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <!-- 设置背景颜色 -->
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="BorderThickness" Value="0" />

                            <!-- 设置右键菜单 -->
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Connect" 
                              Command="{Binding DataContext.ConnectCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                              CommandParameter="{Binding}" />
                                        <MenuItem Header="Properties" 
                              Command="{Binding DataContext.PropertiesCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                              CommandParameter="{Binding}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>

                            <!-- 鼠标悬停触发器 -->
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>



                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="11"  >
                                <!-- 右键菜单 -->
             
                                
                                <!--Wi-Fi 名称-->
                                <TextBlock Foreground="#808080" Text="{Binding Name}" Width="200" VerticalAlignment="Center" />
                                <!--Group名称-->
                                <TextBlock Foreground="White" Text="{Binding GroupName}" Width="150" VerticalAlignment="Center" />
                                <!-- B -->
                                <TextBlock Foreground="#00bfff" FontWeight="Bold" FontSize="14" Text="HD" Width="50" VerticalAlignment="Center" />
                                <!-- 运营商 -->
                                <TextBlock Foreground="White" Text="{Binding Operators}" Width="150" FontSize="15"  VerticalAlignment="Center" />
                                <!--动态条-->
                                <Grid Width="300" Height="20" VerticalAlignment="Center">
                                    <Rectangle Height="4" HorizontalAlignment="Left"
                                        Fill="{Binding Latency, Converter={StaticResource LatencyToColorConverter}}"  
                                       Width="{Binding Latency, Converter={StaticResource LatencyToWidthConverter}}" 
                                             />
                                </Grid>
                                <!--延迟数值-->
                                <TextBlock Width="55" Margin="10,0,0,0" VerticalAlignment="Center" TextAlignment="Right" Foreground="#808080">
                                       <Run Text="{Binding Latency}"  Foreground="#ffffff"></Run>
                                       <Run Text=" ms" ></Run>
                                </TextBlock>
                                <!--是否为广播-->
                                  <TextBlock  Width="85" Padding="40 0 0 0">
                                       <InlineUIContainer>
                                           <Border Padding="11,1" Width="40">
                                           <Border.Style>
                                               <Style TargetType="Border">
                                                    <!--默认样式--> 
                                                   <Setter Property="Background" Value="#B21016" />
                                                   <Setter Property="CornerRadius" Value="4" />
                                                   <Style.Triggers>
                                                        <!--当 IsRadio 为 True 时--> 
                                                       <DataTrigger Binding="{Binding IsRadio}" Value="True">
                                                           <Setter Property="Background" Value="#00455D" />                          
                                                       </DataTrigger>
                                                   </Style.Triggers>
                                               </Style>
                                           </Border.Style>                                               
                                                <TextBlock FontWeight="Bold" Foreground="#FFFFFF" HorizontalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <!--默认样式-->
                                                        <Setter Property="Text" Value="No" />
                                                        <Setter Property="Foreground" Value="#FFFFFF" />
                                                        <Style.Triggers>
                                                            <!--当 IsRadio 为 True 时-->
                                                            <DataTrigger Binding="{Binding IsRadio}" Value="True">
                                                                <Setter Property="Text" Value="Yes" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                                </TextBlock> 
                                           </Border>
                                       </InlineUIContainer>
                                   </TextBlock>

                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            
            <Grid Grid.Column="1"  Background="Black" Visibility="{Binding IsChecked, ElementName=SnapshotsRadioButton, Converter={StaticResource BoolToVisibilityConverter}}">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <WrapPanel Margin="5" Orientation="Horizontal" >
                        <ItemsControl ItemsSource="{Binding WifiList}"   >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderThickness="1" Margin="0" Padding="5" CornerRadius="4">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <!-- 默认背景色 
                                                <Setter Property="Background" Value="#1F1F1F" />-->

                                                <!-- 鼠标悬停时的背景色 -->
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#3F3F3F" />
                                                        <Setter Property="BorderBrush" Value="#2B2B2B" />
                                                    </Trigger>

                                                    <!-- 鼠标点击时的背景色 -->
                                                    <Trigger Property="IsMouseCaptured" Value="True">
                                                        <Setter Property="Background" Value="SteelBlue" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <StackPanel>
                                            <!-- 显示截图 -->
                                            
                                            <Border CornerRadius="0" BorderBrush="#808080" BorderThickness="1" Width="356" Height="201">
                                            
                                            <!--<Border.Effect>
                                                <DropShadowEffect 
                                                Color="#fff" 
                                                ShadowDepth="0" 
                                                BlurRadius="11" 
                                                Opacity="0.8" />
                                            </Border.Effect>-->
                                                <Border.Background>
                                                    <ImageBrush ImageSource="{Binding ScreenshotPath, FallbackValue='pack://application:,,,/image/placeholder.png', TargetNullValue='pack://application:,,,/image/placeholder3.png'}" Stretch="Fill" />
                                                </Border.Background>
                                            </Border>


                                            <!-- 显示频道名 -->
                                            <Grid>
                                                <TextBlock Text="{Binding Name}" 
                                                           Width="250"
                                                   FontSize="15" 
                                                   Foreground="White"
                                                   FontWeight="Normal" 
                                                   Margin="5,5,0,3"
                                                   HorizontalAlignment="Left"/>
                                                <!-- 显示延迟--> 
                                                <TextBlock Text="{Binding Latency, StringFormat= {}{0} ms}" 
                                                   FontSize="12" FontWeight="Bold"
                                                   Foreground="Gray" 
                                                   Margin="0,6,5,3" 
                                                   HorizontalAlignment="Right"/>
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
             
                    </WrapPanel>
                </ScrollViewer>
            </Grid>
            
            <Grid Grid.Column="1" Visibility="{Binding IsChecked, ElementName=IconRadioButton, Converter={StaticResource BoolToVisibilityConverter}}">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <WrapPanel Margin="7" Orientation="Horizontal"  >
                        <ItemsControl ItemsSource="{Binding WifiList}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="Gray" BorderThickness="0" Margin="4" CornerRadius="9">


                                        <!-- 包裹整个内容，用于处理鼠标事件 -->
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <!-- 默认背景 -->
                                                <Style.Triggers>
                                                    <!-- 鼠标悬停效果 -->
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#2B2B2B"/>
                                                        <!-- 悬停时背景色 -->
                                                    </Trigger>
                                                    <!-- 鼠标点击效果 -->
                                                    <Trigger Property="IsMouseCaptured" Value="True">
                                                        <Setter Property="Background" Value="Red"/>
                                                        <!-- 点击时背景色 -->
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <StackPanel  >
                                            <!-- 显示台标 -->
                                            <Border CornerRadius="9" BorderBrush="#808080" BorderThickness="1" Width="150" Height="150" Margin="5 5 5 1">
                                                <Border.Background>
                                                    <ImageBrush Stretch="UniformToFill" ImageSource="{Binding ScreenshotPath, FallbackValue='pack://application:,,,/image/placeholder.png', TargetNullValue='pack://application:,,,/image/placeholder3.png'}"/>
                                                </Border.Background>
                                                <!-- 显示频道名 -->
                                            </Border>
                                            <TextBlock TextAlignment="Center" Text="{Binding Name}" Width="150" Foreground="White" Margin="5,5,5,4"/>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </WrapPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
    <!--</Border>-->
</Window>


  
